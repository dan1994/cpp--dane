@startuml dane
class BiMap<T,U> {
	- {field}	mapping : std::unordered_map<T,U>
	- {field}	reverseMapping : std::unordered_map<U,T>
	+ {method}	getByT(const T &) const : const U &
	+ {method}	getByU(const U &) const : const T &
	+ {method}	insert(T, U) : void
	+ {method}	removeByT(const T &) : void
	+ {method}	removeByU(const U &) : void
}

class EncodingFactory<std::string> {
	+ {method}	{static} constexpr makeCanonicalEncoding() : BiMap<char, std..
	+ {method}	{static} makeEncodingFromText(const std::string &) : T
	+ {method}	{static} makeEncodingFromDaneFile(const std::string &) : T
}

class Encoding {
	- {field}	mapping : BiMap<char, std::pair<unsigned char, unsigned int>>
	+ {method}	encoding() : const BiMap<char, std::pair<unsigned char, unsigned int>> &
	* {method}	friend operator<<(ostream &, const Encoding &) : ostream &
}

class HuffmanEncoding {
	{method}
}

class EncoderDecoder {
	- {field}	encoding : Encoding
	+ {method}	EncoderDecoder(const Encoding)
	+ {method}	encode(const std::string &) const : std::vector<bool>
	+ {method}	decode(const std::vector<bool> &) const : std::string
}

Encoding <|-- HuffmanEncoding
Encoding *-- BiMap
@enduml